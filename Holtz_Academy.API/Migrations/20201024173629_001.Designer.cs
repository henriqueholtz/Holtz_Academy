// <auto-generated />
using System;
using Holtz_Academy.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Holtz_Academy.API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201024173629_001")]
    partial class _001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Holtz_Academy.API.Entities.Branch", b =>
                {
                    b.Property<int>("BranchCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchCityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchNeighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchNumber")
                        .HasColumnType("int");

                    b.Property<string>("BranchReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("BranchStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("BranchStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentCode")
                        .HasColumnType("int");

                    b.Property<int?>("StudentCode1")
                        .HasColumnType("int");

                    b.Property<int>("TeatcherCode")
                        .HasColumnType("int");

                    b.Property<int?>("TeatcherCode1")
                        .HasColumnType("int");

                    b.HasKey("BranchCode");

                    b.HasIndex("StudentCode1");

                    b.HasIndex("TeatcherCode1");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Equipament", b =>
                {
                    b.Property<int>("EquipamentCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipamentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("EquipamentStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("EquipamentCode");

                    b.ToTable("Equipaments");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Student", b =>
                {
                    b.Property<int>("StudentCode")
                        .HasColumnType("int");

                    b.Property<int>("BranchCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("StudentBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentCityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNeighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("int");

                    b.Property<byte>("StudentStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("StudentStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentaReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeatcherCode")
                        .HasColumnType("int");

                    b.HasKey("StudentCode");

                    b.HasIndex("TeatcherCode");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Teatcher", b =>
                {
                    b.Property<int>("TeatcherCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("TeatcherBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeatcherCityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeatcherNeighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeatcherNumber")
                        .HasColumnType("int");

                    b.Property<string>("TeatcherReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("TeatcherStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("TeatcherStreet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeatcherCode");

                    b.HasIndex("BranchCode");

                    b.ToTable("Teatchers");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Branch", b =>
                {
                    b.HasOne("Holtz_Academy.API.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentCode1");

                    b.HasOne("Holtz_Academy.API.Entities.Teatcher", "Teatcher")
                        .WithMany()
                        .HasForeignKey("TeatcherCode1");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Student", b =>
                {
                    b.HasOne("Holtz_Academy.API.Entities.Branch", "Branch")
                        .WithMany("Students")
                        .HasForeignKey("StudentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Holtz_Academy.API.Entities.Teatcher", "Teatcher")
                        .WithMany("Students")
                        .HasForeignKey("TeatcherCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Teatcher", b =>
                {
                    b.HasOne("Holtz_Academy.API.Entities.Branch", "Branch")
                        .WithMany("Teatchers")
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
