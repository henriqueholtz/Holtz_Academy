// <auto-generated />
using System;
using Holtz_Academy.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Holtz_Academy.API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201026100204_002")]
    partial class _002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Holtz_Academy.API.Entities.Branch", b =>
                {
                    b.Property<int>("BranchCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchCityName")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("BranchNeighborhood")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("BranchNumber")
                        .HasColumnType("int");

                    b.Property<string>("BranchReason")
                        .HasColumnType("VARCHAR(75)");

                    b.Property<byte?>("BranchStatus")
                        .HasColumnType("TINYINT");

                    b.Property<string>("BranchStreet")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("BranchCode");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Equipament", b =>
                {
                    b.Property<int>("EquipamentCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipamentName")
                        .HasColumnType("VARCHAR(75)");

                    b.Property<byte?>("EquipamentStatus")
                        .HasColumnType("TINYINT");

                    b.HasKey("EquipamentCode");

                    b.ToTable("Equipament");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Student", b =>
                {
                    b.Property<int>("StudentCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchBranchCode")
                        .HasColumnName("BranchCode")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("StudentBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentCityName")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("StudentNeighborhood")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("StudentNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("StudentStatus")
                        .HasColumnType("TINYINT");

                    b.Property<string>("StudentStreet")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("StudentaReason")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("TeatcherTeatcherCode")
                        .HasColumnName("TeatcherCode")
                        .HasColumnType("INT");

                    b.HasKey("StudentCode");

                    b.HasIndex("BranchBranchCode");

                    b.HasIndex("TeatcherTeatcherCode");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Teatcher", b =>
                {
                    b.Property<int>("TeatcherCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchBranchCode")
                        .HasColumnName("BranchCode")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("TeatcherBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeatcherCityName")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("TeatcherNeighborhood")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("TeatcherNumber")
                        .HasColumnType("int");

                    b.Property<string>("TeatcherReason")
                        .HasColumnType("VARCHAR(75)");

                    b.Property<byte?>("TeatcherStatus")
                        .HasColumnType("TINYINT");

                    b.Property<string>("TeatcherStreet")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("TeatcherCode");

                    b.HasIndex("BranchBranchCode");

                    b.ToTable("Teatcher");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Student", b =>
                {
                    b.HasOne("Holtz_Academy.API.Entities.Branch", "Branch")
                        .WithMany("Students")
                        .HasForeignKey("BranchBranchCode");

                    b.HasOne("Holtz_Academy.API.Entities.Teatcher", "Teatcher")
                        .WithMany("Students")
                        .HasForeignKey("TeatcherTeatcherCode");
                });

            modelBuilder.Entity("Holtz_Academy.API.Entities.Teatcher", b =>
                {
                    b.HasOne("Holtz_Academy.API.Entities.Branch", "Branch")
                        .WithMany("Teatchers")
                        .HasForeignKey("BranchBranchCode");
                });
#pragma warning restore 612, 618
        }
    }
}
